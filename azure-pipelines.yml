# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  GO111MODULE: 'on'
  modulePath: '$(GOPATH)/src/go.bobheadxi.dev/res'

steps:
- task: GoTool@0
  inputs:
    version: '1.12'

- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    go get -u golang.org/x/lint/golint
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies'

- script: |
    go vet ./...
    go fmt ./...
    golint $(go list ./... | grep -v /vendor/)
  workingDirectory: '$(modulePath)'
  displayName: 'Run static analysis'

- script: |
    go test -race -coverprofile=coverage.txt ./...
  workingDirectory: '$(modulePath)'
  displayName: 'Run tests and report coverage'

- script: bash <(curl -s https://codecov.io/bash) -t $(CODECOV_TOKEN)
  workingDirectory: '$(modulePath)'
  displayName: 'Report coverage'
  condition: succeeded()
